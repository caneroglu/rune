// Patricia Tree K/V DB Query Language

WHITESPACE = _{ " " | "\t" | "\r" | "\n" }

// Operators
op_upsert = { "+" }
op_delete = { "-" }
op_read = { "$" }
op_rename = { "+=" }
operator = { op_rename | op_upsert | op_delete | op_read }

// Access modes
exact_access = { ":" }
radix_access = { "." }
access_mode = { exact_access | radix_access }

// Identifiers
db_name = @{ (ASCII_ALPHANUMERIC | "_")+ }
key = @{ (ASCII_ALPHANUMERIC | "_" | "-" | "/" | ":")+ }

// Value - everything after first =
value = @{ (!(";" | NEWLINE) ~ ANY)* }

// * : wildcard operatörü eklesem mi yoksa, dinamik olarak mı parse etsem?

// upsert için exact şart - birden fazla key'i aynı değer verilmez.
upsert_cmd = { op_upsert ~ db_name ~ exact_access ~ key ~ "=" ~ value }
delete_cmd = { op_delete ~ db_name ~ access_mode ~ key }
read_cmd = { op_read ~ db_name ~ access_mode ~ key }

// rename için exact şart - birden fazla key'i aynı isimlendirmek K/V'ye aykırı.
rename_cmd = { op_rename ~ db_name ~ exact_access ~ key ~ "=" ~ key }

command = { rename_cmd | upsert_cmd | delete_cmd | read_cmd }

// Pipeline
pipeline = { command ~ (">" ~ command)+ }

// Statement
statement = { pipeline | command }

// Program
program = { SOI ~ (statement ~ (";" ~ statement)*)? ~ EOI }